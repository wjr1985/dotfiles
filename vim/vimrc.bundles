if &compatible
  set nocompatible
endif

call plug#begin('~/.vim/plugged')

" Themes
Plug 'sainnhe/everforest'
Plug 'sainnhe/gruvbox-material'
Plug 'doums/darcula'
Plug 'morhetz/gruvbox'

Plug 'sheerun/vim-polyglot'

Plug 'airblade/vim-gitgutter'
Plug 'ddrscott/vim-side-search'
Plug 'frazrepo/vim-rainbow'
Plug 'jlanzarotta/bufexplorer'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'mileszs/ack.vim'
Plug 'rust-lang/rust.vim'
Plug 'scrooloose/nerdtree'
Plug 'tomtom/tcomment_vim'
Plug 'Townk/vim-autoclose'
Plug 'tpope/vim-endwise'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-ragtag'
Plug 'tpope/vim-rails'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-unimpaired'
Plug 'tpope/vim-vinegar'
Plug 'tpope/vim-dispatch'
Plug 'vim-scripts/Align'
Plug 'vim-scripts/matchit.zip'
Plug 'vim-test/vim-test'
Plug 'skywind3000/asyncrun.vim'
Plug 'vim-airline/vim-airline'
Plug 'dense-analysis/ale'
Plug 'neomake/neomake'
Plug 'projekt0n/github-nvim-theme'
Plug 'nvim-treesitter/nvim-treesitter', {'do': ':TSUpdate'}

" Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
"
" NCM2 group
" Plug 'ncm2/ncm2'
" Plug 'roxma/nvim-yarp'
" Plug 'ncm2/ncm2-bufword'
" Plug 'ncm2/ncm2-path'
" Plug 'ncm2/ncm2-ultisnips'
" Plug 'SirVer/ultisnips'
" END NCM2 group

" LanguageClient-neovim
" Plug 'autozimu/LanguageClient-neovim', {
"     \ 'branch': 'next',
"     \ 'do': 'bash install.sh',
"     \ }


" DDC group
Plug 'Shougo/ddc.vim'
Plug 'vim-denops/denops.vim'
Plug 'neovim/nvim-lspconfig'
Plug 'Shougo/ddc-nvim-lsp'
Plug 'Shougo/ddc-around'
Plug 'Shougo/ddc-matcher_head'
Plug 'Shougo/ddc-sorter_rank'
Plug 'delphinus/ddc-treesitter'

Plug 'kassio/neoterm'
Plug 'preservim/vimux'


call plug#end()
